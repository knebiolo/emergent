Metadata-Version: 2.4
Name: emergent
Version: 0.0.1
Summary: Emergent ‚Äì agent-based modelling framework for spatial emergent phenomena (ships, fish, ‚Ä¶)
Home-page: https://github.com/knebiolo/emergent
Author: Kevin Nebiolo
Author-email: kevin.nebiolo@kleinschmidtgroup.com
License: MIT
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.20
Requires-Dist: pandas>=1.3
Requires-Dist: scipy>=1.7
Requires-Dist: matplotlib>=3.4
Requires-Dist: geopandas>=0.9
Requires-Dist: shapely>=1.7
Requires-Dist: fiona>=1.8
Requires-Dist: rasterio>=1.2
Requires-Dist: affine>=2.4
Requires-Dist: pyproj>=3.0
Requires-Dist: h5py>=3.1
Requires-Dist: dask[array]>=2021.6
Requires-Dist: PyQt5>=5.15
Requires-Dist: pyqtgraph>=0.12
Requires-Dist: xarray>=0.19
Requires-Dist: fsspec>=2021.8
Requires-Dist: s3fs>=2021.8
Requires-Dist: netcdf4>=1.5
Requires-Dist: h5netcdf>=0.11
Requires-Dist: cfgrib>=0.9.10
Requires-Dist: aiobotocore>=2.0
Requires-Dist: aiohttp>=3.7
Requires-Dist: networkx>=2.6
Requires-Dist: requests>=2.25
Provides-Extra: dev
Requires-Dist: black; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Dynamic: author-email
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# Emergent üö¢ üêü# emergent

Python software using agent based models to solve complex spatial problems.  This software was written alongside my dissertation (Nebiolo 2017).   

**Agent-Based Modeling Framework for Spatial Emergent Phenomena**

## Agent Based Models

Python software using agent-based models to solve complex spatial problems in maritime navigation and aquatic ecology. This software was developed alongside Dr. Kevin Nebiolo's dissertation research (Nebiolo 2017).ABMs are a collection of autonomous, goal directed software objects, capable of interacting with other agents, reacting to their environment, and making decisions that maximize their own well being.



[![Python](https://img.shields.io/badge/python-3.10+-blue.svg)](https://www.python.org/downloads/)ABMs simulate complex adaptive systems, what we see as random movement is not.  There are no stochastic processes in these models other than setting intial states.  Movement therefore is chaotic, once the simulation starts the agents are making decisions on their own - we cannot predict their behavior, it has to unfold.  The goal of these applications is to produce self organized emergent behavior of interest to managers.  Emergence results from individual interaction governed by simple behavioral rules.  Traffic jams the result of congestion, not construction or an accident, are an example of emergence and are known as kinematic waves in the literature.  

[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

[![Status](https://img.shields.io/badge/status-alpha-orange)](https://github.com/knebiolo/emergent)## Getting Involved

If you are a Python developer and want to help out, please send an email to kevin.nebiolo@kleinschmidtgroup.com.  

---

Otherwise, feel free to post in Discussions.  

## üéØ What is Emergent?

**Emergent** is a framework for simulating complex adaptive systems where simple individual behaviors lead to sophisticated group patterns. The software includes two major agent-based models:

### 1. **Ship ABM** - Maritime Navigation with Real-World Forcing üö¢
Simulate vessel traffic in harbors and waterways with realistic environmental conditions:
- **Real-time ocean currents** from NOAA Operational Forecast Systems (OFS)
- **Real-time wind data** from HRRR, ERA5, and NOAA meteorological models
- **4-DOF ship dynamics** using Fossen hydrodynamic model
- **COLREGS collision avoidance** (International Regulations for Preventing Collisions at Sea)
- **PID autopilot** with environmental drift compensation
- **Interactive GUI** for route planning and visualization

**Supported Harbors** (with real NOAA data):
- Baltimore, MD (Chesapeake Bay)
- Galveston, TX (Gulf of Mexico) ‚≠ê **Fully operational with currents + winds**
- New Orleans, LA (Gulf of Mexico)
- San Francisco Bay, CA (Pacific Coast)
- Seattle, WA (Puget Sound)
- Rosario Strait, WA (Salish Sea)
- Los Angeles, CA (Southern California)
- New York, NY (Atlantic Coast)

### 2. **Salmon ABM** - Fish Passage and Migration üêü
Model fish behavior and movement through river systems and hydroelectric facilities:
- Energetic-based decision making
- Hydraulic forcing from HEC-RAS models
- Schooling behavior
- Turbine passage and survival

---

## üöÄ Quick Start

### Installation

#### Option 1: pip (recommended)
```bash
# Clone the repository
git clone https://github.com/knebiolo/emergent.git
cd emergent

# Install in development mode
pip install -e .

# Or install from requirements.txt
pip install -r requirements.txt
```

#### Option 2: conda
```bash
# Create environment from environment.yml
conda env create -f environment.yml
conda activate emergent

# Install the package
pip install -e .
```

### System Requirements
- **Python**: 3.10 or higher
- **Operating System**: Windows, macOS, or Linux
- **RAM**: 8GB minimum, 16GB+ recommended for large simulations
- **Internet**: Required for downloading NOAA/HRRR environmental data from AWS S3

---

## üìñ Usage

### Ship ABM - Interactive GUI

Launch the ship simulation GUI:

```python
python scripts/run_ship.py
```

**Workflow**:
1. GUI window opens with harbor map
2. Click **"Define Route"** button
3. Click waypoints on the map to create a route
4. Click **"Add Ship"** to spawn a vessel
5. Click **"Start Simulation"** to begin
6. Watch ships navigate with real currents and winds!

### Ship ABM - Programmatic

```python
from emergent.ship_abm.ofs_loader import get_current_fn
from emergent.ship_abm.atmospheric import wind_sampler
from emergent.ship_abm.config import SIMULATION_BOUNDS
from datetime import datetime
import numpy as np

# Choose harbor
harbor = "Galveston"
bounds = SIMULATION_BOUNDS[harbor]
bbox = (bounds['minx'], bounds['maxx'], bounds['miny'], bounds['maxy'])

# Load environmental forcing
current_fn = get_current_fn(harbor, datetime.now())
wind_fn = wind_sampler(bbox, datetime.now())

# Sample at a location
lon, lat = -95.0, 29.5
currents = current_fn(np.array([lon]), np.array([lat]), datetime.now())
winds = wind_fn(np.array([lon]), np.array([lat]), datetime.now())

print(f"Current: {currents[0]} m/s")
print(f"Wind: {winds[0]} m/s")
```

---

## üåä Environmental Data Sources

### Ocean Currents (NOAA OFS)
- **CBOFS**: Chesapeake Bay (ROMS, 10s cycles)
- **NGOFS2**: Northern Gulf of Mexico (FVCOM, 500k+ elements) ‚≠ê
- **SFBOFS**: San Francisco Bay (FVCOM, 100k+ elements)
- **SSCOFS**: Salish Sea / Puget Sound (FVCOM, 430k+ elements)
- **WCOFS**: West Coast (ROMS, surface-only)
- **RTOFS**: Global fallback (1/12¬∞ resolution)

All data accessed anonymously from AWS S3: `s3://noaa-nos-ofs-pds/`

**Performance**: 5-15s load time, <1ms spatial queries

---

## üìä Features

### Ship ABM
- ‚úÖ **Real ocean currents** from 6 NOAA operational forecast models
- ‚úÖ **Real wind data** from HRRR/ERA5/NOAA
- ‚úÖ **Fast spatial interpolation** with KDTree (O(log n))
- ‚úÖ **4-DOF ship dynamics** (surge, sway, roll, yaw)
- ‚úÖ **PID autopilot** with environmental compensation
- ‚úÖ **COLREGS collision avoidance**
- ‚úÖ **Interactive route planning**
- ‚úÖ **Real-time visualization**
- ‚úÖ **8 US harbors** with real NOAA data
- üîÑ **Caching system** (in progress)
- üîÑ **Time interpolation** (in progress)

---

## üõ†Ô∏è Development

### Project Structure
```
emergent/
‚îú‚îÄ‚îÄ src/emergent/
‚îÇ   ‚îú‚îÄ‚îÄ ship_abm/           # Ship navigation ABM
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ ofs_loader.py   # Ocean current data loader (876 lines)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ atmospheric.py  # Wind data loader (235 lines)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ ship_model.py   # 4-DOF ship dynamics
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ simulation_core.py  # Main simulation loop
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ ship_viewer.py  # PyQt5 GUI
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ config.py       # Harbor configurations
‚îÇ   ‚îî‚îÄ‚îÄ salmon_abm/         # Fish migration ABM
‚îú‚îÄ‚îÄ scripts/                # Example scripts
‚îú‚îÄ‚îÄ setup.py                # Installation script  ‚úÖ NEW
‚îú‚îÄ‚îÄ requirements.txt        # Dependencies  ‚úÖ NEW
‚îú‚îÄ‚îÄ environment.yml         # Conda environment  ‚úÖ NEW
‚îú‚îÄ‚îÄ SHIP_ABM_TODO.md       # Development roadmap  ‚úÖ NEW
‚îî‚îÄ‚îÄ README.md              # This file  ‚úÖ UPDATED
```

### Running Tests

```bash
# Test all harbors (currents) - ALL 8 WORKING! ‚úÖ
python scripts/test_all_harbors.py

# Test all harbors (winds) - 1/8 working, 7 in progress
python scripts/test_all_harbors_wind.py

# Test Galveston simulation (currents + winds working!)
python scripts/test_galveston_simulation.py
```

### Contributing

See **`SHIP_ABM_TODO.md`** for detailed roadmap and priorities.

---

## üêõ Known Issues

See `SHIP_ABM_TODO.md` for complete list. Key issues:
1. Wind loading works for NGOFS2 (Galveston, New Orleans) but needs fixes for ROMS models
2. ERA5 requires authentication (falls back to NOAA OFS)
3. Some harbors have limited station coverage (uniform wind fields)

---

## üìñ Citation

```bibtex
@phdthesis{nebiolo2017emergent,
  title={Agent-Based Modeling of Complex Spatial Systems},
  author={Nebiolo, Kevin},
  year={2017},
  note={Software: https://github.com/knebiolo/emergent}
}
```

---

## üìß Contact

**Kevin Nebiolo, PhD**  
Principal Scientist, Kleinschmidt Associates  
Email: kevin.nebiolo@kleinschmidtgroup.com

**Getting Involved**:
- Developers: Email above
- Users: Post in GitHub Discussions
- Bugs: GitHub Issues

---

## üìú License

MIT License - see [LICENSE](LICENSE) file

---

## üôè Acknowledgments

- **NOAA**: Operational Forecast Systems and public AWS data
- **NCEP**: HRRR high-resolution weather data
- **Kleinschmidt Associates**: Research support

---

## üóìÔ∏è Recent Updates

### October 2, 2025 - Infrastructure Improvements
- ‚úÖ Created `setup.py` for proper package installation
- ‚úÖ Created `requirements.txt` with all dependencies
- ‚úÖ Created `environment.yml` for conda users
- ‚úÖ Created `SHIP_ABM_TODO.md` with detailed roadmap
- ‚úÖ Improved README with comprehensive documentation
- ‚úÖ Fixed ocean current loading (8/8 harbors working!)
- üîÑ Wind loading in progress (1/8 harbors fully functional)

---

**Built with ‚ù§Ô∏è for the maritime and aquatic science communities**
